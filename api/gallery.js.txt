import { Dropbox } from "dropbox";

const DROPBOX_ACCESS_TOKEN = process.env.DROPBOX_ACCESS_TOKEN;

export default async function handler(req, res) {
  if (req.method !== "GET") {
    res.status(405).send("Method Not Allowed");
    return;
  }

  const dbx = new Dropbox({ accessToken: DROPBOX_ACCESS_TOKEN, fetch: fetch });

  try {
    const list = await dbx.filesListFolder({ path: "/FotosCumple" });

    const linksPromises = list.entries.map(async (file) => {
      try {
        const sharedLink = await dbx.sharingCreateSharedLinkWithSettings({
          path: file.path_lower,
        });
        return sharedLink.url.replace("dl=0", "raw=1");
      } catch {
        // Si ya existe link compartido
        const listSharedLinks = await dbx.sharingListSharedLinks({
          path: file.path_lower,
        });
        if (listSharedLinks.links.length > 0) {
          return listSharedLinks.links[0].url.replace("dl=0", "raw=1");
        }
        return null;
      }
    });

    const urls = (await Promise.all(linksPromises)).filter(Boolean);

    res.status(200).json(urls);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Error fetching files from Dropbox" });
  }
}
